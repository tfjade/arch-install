# vim:set ft=sh
# shellcheck shell=bash disable=SC2034
#
# Settings for arch-install by tfjade@protonmail.com
#
# Some of the settings are enable/disable flags. To "disable" such setting,
# set it to any of (case-insensitive): 0, no, off, false, or leave as empty.
# Anything else means "enabled".
# Note also the options for the installer, check: arch-install --help

KEYMAP=
# Set your keymap. Available keymaps can be seen by (e.g. searching for German):
#     localectl list-keymaps | grep de
#
# If no KEYMAP is set here, the default will be "us".
# Consider this as an essential.

LOCALE=
# Set your locale, e.g. "de_DE". The UTF-8 version(s) will be generated.
# You may select multiple locales separated by the | (pipe) character.
# The first one will be the default locale. Locale "en_US" is always included
# in this list.
# If no LOCALE is set here, only "en_US" will be installed.
# Consider this as an essential.

HOSTNAME=
# Optionally set the hostname. If no HOSTNAME is set here, the hostname
# will be 'arch-xyz' where part 'xyz' will be 3 random letters.

LOCALTIME=
# Optionally set your timezone, e.g. "Europe/Berlin". If no LOCALTIME is set,
# the timezone will be queried from http://ip-api.com

UNAME=
# Set your admin username. If no UNAME is set, you may enter a username
# when the installer asks for it. If no username is entered, only
# root can login, since no other users will exist.
#
# Note: UNAME or MY_PASSWORD are not needed nor used, if you will use
# systemd-homed to handle users. See the SYSTEMD_HOMED setting below.

MY_PASSWORD=
# Optionally set your password. If you set here the password and UNAME is set,
# this password will be set for user UNAME. Unless both UNAME and MY_PASSWORD 
# are set, the installer will prompt you for both a username and the password.
# Here the password can be encrypted/hashed or plain. An encrypted password
# MUST be set inside 'single quotes', because it will contain special
# characters. To encrypt e.g. YourPassword, install whois, and then run:
#     mkpasswd YourPassword
#
# Note: MY_PASSWORD is not needed nor used, if you will use systemd-homed to
# handle users.

ROOT_PASSWORD=
# Optionally set the root password. If ROOT_PASSWORD is not set, root account
# may be locked and unavailable to login. See the LOCK_ROOT_ACCOUNT setting.
# Here the password can be encrypted/hashed or plain, like MY_PASSWORD.
# To encrypt e.g. RootPassword, install whois, and then run:
#     mkpasswd RootPassword

LOCK_ROOT_ACCOUNT=yes
# If LOCK_ROOT_ACCOUNT is enabled, the root account will be locked and
# unavailable to login, unless certain conditions deem root login necessary.
# The root account remains open to login, if this setting is disabled.

SET_SSH_KEY_PASSWORD=no
# If you create a user, the installer will create a new Ed25519 SSH key 
# for user UNAME, unless SSH keys already exists in the home of UNAME.
# This is an optional flag wheather to set a SSH key passphrase.
# If disabled, the passphrase prompts will be suppressed and
# no passphrase is applied to the new SSH key.
# If enabled, the installer will ask for a passphrase for the SSH key,
# which can still be left empty. 'keychain' can be used to cache
# non-empty SSH key passphrases. See ~/.bashrc in the home of UNAME.

SSH_USER_CA_PUB_KEY=
# Optionally and if you use SSH User Certificates, here you can set the
# public key of your user-CA. If this is set, it will be stored in 
# /etc/ssh/ssh_user_key.pub, and line 'TrustedUserCAKeys /etc/ssh/ssh_user_key.pub'
# will be set in drop-in file /etc/ssh/sshd_config.d/10-certificates.conf.
#
# Note: You may want/need to sign the SSH user keys by your user-CA. 
# Unfortunately this is beyond the capability of this installer since
# the installer cannot access your CA.

SSH_CERT_AUTHORITY=
# Optionally and if you use SSH Host Certificates, here you can set the
# '@cert-authority ...' each host needs to have. This essentially contains
# the host-CA's public key, and a list of hosts that are signed by it. It will
# be stored in /etc/ssh/ssh_known_hosts, where it is accessible to all users.
#
# Note: You may want/need to sign the SSH host keys by your host-CA. 
# Unfortunately this is beyond the capability of this installer since
# the installer cannot access your CA.

SSH_PUB_KEYS=(
'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJROjmXAr8TNvcs3+bQu/RqhOUJXM/xsv6RZGUuzvNTz void@example'
)
# Optionally you can pre-install some SSH public keys to the new system.
# These keys will be added into ~/.ssh/authorized_keys in the home of UNAME,
# just like ssh-copy-id would do it.
# Place your SSH public keys one key per line inside quotes, like the 
# void example line, which will be filtered out by the installer.
# Note: No keys are needed here, if you have a SSH_USER_CA_PUB_KEY, see above.

SWAP_PARTITION=no
# Create swap partition? If disabled, a swapfile will be created, provided
# SWAP_SIZE is greater than or equal to 1. I prefer zram swap, though.

SWAP_SIZE=0
# Set the size of the swap partition or swapfile. You can use k, M or G as
# the suffix for kiB, MiB or GiB. The default is G, so 1 means 1 GiB
# Set SWAP_SIZE=0 to not create any swapfile nor swap partition. This makes
# the new system use zram swap - my preferred swap type.
# Note: To be able to use hibernation, a "RAM sized" swap is needed.
# Set SWAP_SIZE=H to create a big enough swap to be able to hibernate.
# This swap will be slightly bigger than the amount of RAM in the computer.
# Also, you will need to set some kernel parameters to hibernate, see:
# https://wiki.archlinux.org/title/Power_management/Suspend_and_hibernate#Hibernation
# and if BTRFS: https://btrfs.readthedocs.io/en/latest/Swapfile.html#hibernation

BTRFS=no
# Use BTRFS for the root filesystem? Disable to use ext4.
# Some prefer Grub as the BOOT_LOADER with btrfs, because of how btrfs snapshots
# can be booted into with the grub-btrfs package.
# Note: With or without BTRFS, I prefer zram swap, i.e. I set SWAP_SIZE=0 always.

ENCRYPT=no
# Encrypt the filesystem with dm-crypt? This also implies encrypting the swap.
# You will be prompted for a passphrase, which must be entered at every boot.
# Encryption uses LUKS2 and, if needed, the "LVM on LUKS" method described at:
# https://wiki.archlinux.org/title/Dm-crypt/Encrypting_an_entire_system#LVM_on_LUKS
# Disable to not use disk encryption. Also, unless you type YES at the confirmation,
# disk encryption will be canceled.
#
# Note: If disk is already encrypted, the installer uses the existing encryption
# regardless of this setting. When asked, you must enter a valid passphrase.
#
# Warning: If you want to remove the encryption, you must do it manually. See:
# https://wiki.archlinux.org/title/Removing_system_encryption
# To get rid of encryption, when you don't care for the contents, run:
#
#     dd if=/dev/zero of=/dev/sdXY bs=1M count=1; partprobe /dev/sdX
#
# where /dev/sdXY is the encrypted partition, and /dev/sdX is the disk.

VM_IS_ALWAYS_SSD=yes
# Detecting SSD disk devices is not reliable in virtual machines.
# Assume virtual machine is always on SSD? If disabled,
# a SSD may be detected as a rotational HDD in a virtual machine.
# Note: This setting is effective only if BTRFS or ENCRYPT is enabled.

KERNEL=linux
# Select the kernel(s) to install. To install e.g. both linux and linux-lts,
# set KERNEL=(linux linux-lts). The first one will become the default.
# Kernels available in Arch Linux: https://wiki.archlinux.org/title/Kernel
# There are many more kernels in the AUR, but this installer will not
# install kernels from the AUR.

#BOOT_LOADER=EFISTUB
BOOT_LOADER=systemd-boot
#BOOT_LOADER=rEFInd
#BOOT_LOADER=grub
#BOOT_LOADER=grub,os-prober
# Select your boot loader by uncommenting one of the BOOT_LOADER lines above.
# If you want Grub and intend to multi-boot, choose the "grub,os-prober" variant.
# Note: EFISTUB, systemd-boot and rEFInd are available on EFI systems only.
# Grub will be installed always on legacy BIOS MBR systems.
# If you install multiple kernels (e.g. linux and linux-lts), do not
# select EFISTUB, since it has no simple way to choose what to boot.
# Note: I usually prefer EFISTUB in vm's, systemd-boot on real metal.

SECURE_BOOT=no
# Secure boot with own keys is available on EFI systems.
# If you enable SECURE_BOOT, you might also want to enable ENCRYPT.
# Secure boot is done with 'sbctl' and it is here HIGHLY EXPERIMENTAL
# and poorly tested! Secure boot must be in "Setup" mode in the BIOS/UEFI.
# You may need to experiment with the BIOS/UEFI settings to get this working.

SYSTEMD_NETWORKD=no
# Use systemd-networkd? Disable to use NetworkManager. Many desktops prefer
# NetworkManager. With systemd-networkd configuring is done with config files
# in /etc/systemd/network/
# Note: By default systemd-resolved will handle DNS in both cases.

SYSTEMD_HOMED=no
# Use systemd-homed to create your user account? Mainly if you need a
# "portable home". By default this installer reserves 50% of available
# disk space for the home, but this home can be resized anytime.
# See also ROOT_SIZE. Disable to use traditional user accounts.

HOME_PARTITION=no
# Create a separate home partition? If this is enabled, you may want to
# set ROOT_SIZE also. If you have a disk containing the home partition,
# enter here the /dev/ path to the home partition (hint: lsblk -o +path)
# or use the --home option of the installer.
# Note: If you have selected encryption, a new home will also be encrypted.

ROOT_SIZE=
# ROOT_SIZE limits the size of the root, so that the root partition/volume
# will not take the whole disk. If SYSTEMD_HOMED is selected, or if you've
# selected a separate home partition, the default ROOT_SIZE is 50% of available
# space, and the rest of the disk space would be available for homes.
# Note: If you choose to set the root size, for "production" set ROOT_SIZE=30G
# or preferably more. Possible suffixes are G for GiB (default) and T for TiB,
# or % for percentage of available disk space.

APPARMOR=yes
# Install and enable apparmor?
# Disable this to not install apparmor.

FIREWALL=yes
# Enable the ufw firewall? If enabled, by default only the ssh tcp port
# (port 22 by default) will be open for incoming connections.
# If disabled, ufw is installed, but initially disabled.

INTELGPU_DISABLE=no
AMDGPU_DISABLE=no
NVIDIA_DISABLE=no
# If you don't want to install some graphics driver even if that
# device is detected, activate the corresponding 'blacklist flag'
# from these. For example, on Ryzen 7000 series processors there is
# an AMD GPU detected, and if your system also has a NVidia GPU,
# you may not want to install the AMD graphics drivers. Also, if 
# you don't trust that the installer will install correctly drivers
# for your GPU, activate the corresponding blacklist flag here.

VIRT_RESOLUTION="1680x1050"
# Screen resolution fix for GRUB, and when installing in a virtual machine.

GIT_CONFIG="
[core]
    pager = less -F -X
#    pager = bat --color=always
[init]
    defaultBranch = main
[user]
    user =
    email =
#    signingkey =
#[gpg]
#    format = ssh
#[commit]
#    gpgsign = true
#[tag]
#    gpgsign = true
"
# Contents of GIT_CONFIG will be written in ~/.config/git/config
# as the global git settings for user UNAME.
